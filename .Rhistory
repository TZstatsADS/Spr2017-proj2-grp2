fakedata <- function(w, n){
if(! require(MASS))
{
install.packages("MASS")
}
if(! require(mvtnorm))
{
install.packages("mvtnorm")
}
require(MASS)
require(mvtnorm)
# obtain dimension
d <- length(w)-1
# compute the offset vector and a Basis consisting of w and its nullspace
offset <- -w[length(w)] * w[1:d] / sum(w[1:d]^2)
Basis <- cbind(Null(w[1:d]), w[1:d])
# Create samples, correct for offset, and extend
# rmvnorm(n,mean,sigme) ~ generate n samples from N(0,I) distribution
S <- rmvnorm(n, mean=rep(0,d),sigma = diag(1,d)) %*%  t(Basis)
S <- S + matrix(rep(offset,n),n,d,byrow=T)
S <- cbind(S,1)
# compute the class assignments
y <- as.vector(sign(S %*% w))
# add corrective factors to points that lie on the hyperplane.
S[y==0,1:d] <- S[y==0,1:d] + runif(1,-0.5,0.5)*10^(-4)
y = as.vector(sign(S %*% w))
return(list(S=S, y=y))
} # end function fakedata
shiny::runApp('~/Downloads/Spr2016-Proj2-Grp5-master/app')
runApp('~/Desktop/Spr2017-proj2-grp2/doc')
View(fakedata)
View(fakedata)
sign(-3)
sign(18)
a<-c(10,-19,20)
sign(a)
TRUE*6
TRUE - 1
FALSE +1
FALSE
a<-c(1,2,3)
b<-c(1,2,3)
rbind(a,b)
a<-c(1,2,3)
b<-c(1,2,3)
cbind(a,b)
list(a,b)
list(A=a,b)
a<-1
aa<-function(a){
return(a+a)
}
aa()
a<-1
aa<-function(b){
return(b+a)
}
aa(2)
a<-1
aa<-function(b){
return(b+a)
}
aa(2)
fakedata <- function(w, n){
if(! require(MASS))
{
install.packages("MASS")
}
if(! require(mvtnorm))
{
install.packages("mvtnorm")
}
require(MASS)
require(mvtnorm)
# obtain dimension
d <- length(w)-1
# compute the offset vector and a Basis consisting of w and its nullspace
offset <- -w[length(w)] * w[1:d] / sum(w[1:d]^2)
Basis <- cbind(Null(w[1:d]), w[1:d])
# Create samples, correct for offset, and extend
# rmvnorm(n,mean,sigme) ~ generate n samples from N(0,I) distribution
S <- rmvnorm(n, mean=rep(0,d),sigma = diag(1,d)) %*%  t(Basis)
S <- S + matrix(rep(offset,n),n,d,byrow=T)
S <- cbind(S,1)
# compute the class assignments
y <- as.vector(sign(S %*% w))
# add corrective factors to points that lie on the hyperplane.
S[y==0,1:d] <- S[y==0,1:d] + runif(1,-0.5,0.5)*10^(-4)
y = as.vector(sign(S %*% w))
return(list(S=S, y=y))
} # end function fakedata
z1<-runif(4)
z1
z1<-runif(3)
z1
z<-runif(3)
z
fakedata(z,100)
data<-fakedata(z,100)
data[[1]]
data[[2]]
perceptrain<-function(data[[1]],data[[2]])
data[[1]]
classify<- function(S,z){
return(sign(t(z)%*%S))
}
perceptrain<-function(S,y){
cp<- sum( (classify(S,z) != y ) %*%  abs(y %*% S) )
k <- 1
z_history<-z
while (cp != 0){
grad<- sum( (classify(S,z) != y ) %*%  (-y) %*% S )
z<-z-(1/k)*grad
z_history<-cbind(z_history,z)
cp<- sum( (classify(S,z) != y ) %*%  abs(y %*% S) )
k = k+1
}
return(list(Z=z,Z_history=z_history))
}
perceptrain<-function(data[[1]],data[[2]])
perceptrain(data[[1]],data[[2]])
a<-c(1,2,3)
b<-c(1,2,3)
a%*%b
a%*%t(b)
a<-c(1,2,3)
b<-c(1,2,3)
a%*%b
a<-c(1,2,3,4)
b<-c(1,2,3)
a%*%b
b<-c(1,2,3)
a
b
a<-c(1,2,3)
identical(a,b)
a%*%b
t(a)
a
t(a) %*% b
a%*%b
a %*% t(b)
addLegend(position = 'bottomright', ## choose bottomleft, bottomright, topleft or topright
colors = c('#fee0d2','#fb6a4a', '#cb181d', '#a50f15', '#67000d'),
labels = c(0,"","","",100000),  ## legend labels (only min and max)
opacity = 0.6,      ##transparency again
title = "relative<br>amount")
library(rgeos)
library(sp)
library(rgdal)
library(leaflet)
library(htmlwidgets)
library(shiny)
setwd("~/Desktop/Spr2017-proj2-grp2")
#data.sel = read.csv("data/2016_abridged_cleaned_grouped_FpD.csv", header = T)
#save(data, file = 'output/2016_green_taxi.RData')
# load('output/2016_green_taxi.RData')
# myShape1 = readOGR("data/nynta_shapefile/nynta.shp", layer="nynta")
# save(myShape1, file = 'output/myShape1.RData'
load('output/myShape1.RData')
# calculate the count of pick-ups in each block
subdat<-spTransform(myShape1, CRS("+init=epsg:4326"))
load('output/count_seperated.RData')
#subdat@data$count = count_result[, input$hour+1, !input$isBussinessDay+1]
# all hours
subdat@data$count = apply(count_result[, , 1], 1, sum)
subdat_data=subdat@data[,c("NTACode", "NTAName", "count")]
subdat<-SpatialPolygonsDataFrame(subdat, data=subdat_data)
# print leaflet
pal = colorBin(c('#fee0d2','#fb6a4a', '#cb181d', '#a50f15', '#67000d'), bins = c(0,10,100,1000,10000,100000))
popup1 = paste0('<strong>Neighborhood: </strong><br>', subdat_data$NTAName,
'<br><strong>Count of pick-ups: </strong><br>', subdat_data$count)
mymap = leaflet(subdat) %>%
setView(lat=40.7128, lng=-74.0059, zoom=10) %>%
addProviderTiles('CartoDB.Positron') %>%
addPolygons(fillColor = ~pal(count), color = 'grey', weight = 1, popup = popup1, fillOpacity = .6)
addLegend(position = 'bottomright', ## choose bottomleft, bottomright, topleft or topright
colors = c('#fee0d2','#fb6a4a', '#cb181d', '#a50f15', '#67000d'),
labels = c(0,"","","",100000),  ## legend labels (only min and max)
opacity = 0.6,      ##transparency again
title = "relative<br>amount")
print(mymap)
library(rgeos)
library(sp)
library(rgdal)
library(leaflet)
library(htmlwidgets)
library(shiny)
setwd("~/Desktop/Spr2017-proj2-grp2")
#data.sel = read.csv("data/2016_abridged_cleaned_grouped_FpD.csv", header = T)
#save(data, file = 'output/2016_green_taxi.RData')
# load('output/2016_green_taxi.RData')
# myShape1 = readOGR("data/nynta_shapefile/nynta.shp", layer="nynta")
# save(myShape1, file = 'output/myShape1.RData'
load('output/myShape1.RData')
# calculate the count of pick-ups in each block
subdat<-spTransform(myShape1, CRS("+init=epsg:4326"))
load('output/count_seperated.RData')
#subdat@data$count = count_result[, input$hour+1, !input$isBussinessDay+1]
# all hours
subdat@data$count = apply(count_result[, , 1], 1, sum)
subdat_data=subdat@data[,c("NTACode", "NTAName", "count")]
subdat<-SpatialPolygonsDataFrame(subdat, data=subdat_data)
# print leaflet
pal = colorBin(c('#fee0d2','#fb6a4a', '#cb181d', '#a50f15', '#67000d'), bins = c(0,10,100,1000,10000,100000))
popup1 = paste0('<strong>Neighborhood: </strong><br>', subdat_data$NTAName,
'<br><strong>Count of pick-ups: </strong><br>', subdat_data$count)
mymap = leaflet(subdat) %>%
setView(lat=40.7128, lng=-74.0059, zoom=10) %>%
addProviderTiles('CartoDB.Positron') %>%
addPolygons(fillColor = ~pal(count), color = 'grey', weight = 1, popup = popup1, fillOpacity = .6)
addLegend(position = 'bottomright', ## choose bottomleft, bottomright, topleft or topright
colors = c('#fee0d2','#fb6a4a', '#cb181d', '#a50f15', '#67000d'),
labels = c(0,"","","",100000),  ## legend labels (only min and max)
opacity = 0.6,      ##transparency again
title = "relative<br>amount")
print(mymap)
library(rgeos)
library(sp)
library(rgdal)
library(leaflet)
library(htmlwidgets)
library(shiny)
setwd("~/Desktop/Spr2017-proj2-grp2")
#data.sel = read.csv("data/2016_abridged_cleaned_grouped_FpD.csv", header = T)
#save(data, file = 'output/2016_green_taxi.RData')
# load('output/2016_green_taxi.RData')
# myShape1 = readOGR("data/nynta_shapefile/nynta.shp", layer="nynta")
# save(myShape1, file = 'output/myShape1.RData'
load('output/myShape1.RData')
# calculate the count of pick-ups in each block
subdat<-spTransform(myShape1, CRS("+init=epsg:4326"))
load('output/count_seperated.RData')
#subdat@data$count = count_result[, input$hour+1, !input$isBussinessDay+1]
# all hours
subdat@data$count = apply(count_result[, , 1], 1, sum)
subdat_data=subdat@data[,c("NTACode", "NTAName", "count")]
subdat<-SpatialPolygonsDataFrame(subdat, data=subdat_data)
# print leaflet
pal = colorBin(c('#fee0d2','#fb6a4a', '#cb181d', '#a50f15', '#67000d'), bins = c(0,10,100,1000,10000,100000))
popup1 = paste0('<strong>Neighborhood: </strong><br>', subdat_data$NTAName,
'<br><strong>Count of pick-ups: </strong><br>', subdat_data$count)
mymap = leaflet(subdat) %>%
setView(lat=40.7128, lng=-74.0059, zoom=10) %>%
addProviderTiles('CartoDB.Positron') %>%
addPolygons(fillColor = ~pal(count), color = 'grey', weight = 1, popup = popup1, fillOpacity = .6)
# addLegend(position = 'bottomright', ## choose bottomleft, bottomright, topleft or topright
#           colors = c('#fee0d2','#fb6a4a', '#cb181d', '#a50f15', '#67000d'),
#           labels = c(0,"","","",100000),  ## legend labels (only min and max)
#           opacity = 0.6,      ##transparency again
#           title = "relative<br>amount")
print(mymap)
addLegend(position = 'bottomright', ## choose bottomleft, bottomright, topleft or topright
colors = c('#fee0d2','#fb6a4a', '#cb181d', '#a50f15', '#67000d'),
labels = c(0,"","","",100000),  ## legend labels (only min and max)
opacity = 0.6,      ##transparency again
title = "relative<br>amount")
library(rgeos)
library(sp)
library(rgdal)
library(leaflet)
library(htmlwidgets)
library(shiny)
setwd("~/Desktop/Spr2017-proj2-grp2")
#data.sel = read.csv("data/2016_abridged_cleaned_grouped_FpD.csv", header = T)
#save(data, file = 'output/2016_green_taxi.RData')
# load('output/2016_green_taxi.RData')
# myShape1 = readOGR("data/nynta_shapefile/nynta.shp", layer="nynta")
# save(myShape1, file = 'output/myShape1.RData'
load('output/myShape1.RData')
# calculate the count of pick-ups in each block
subdat<-spTransform(myShape1, CRS("+init=epsg:4326"))
load('output/count_seperated.RData')
#subdat@data$count = count_result[, input$hour+1, !input$isBussinessDay+1]
# all hours
subdat@data$count = apply(count_result[, , 1], 1, sum)
subdat_data=subdat@data[,c("NTACode", "NTAName", "count")]
subdat<-SpatialPolygonsDataFrame(subdat, data=subdat_data)
# print leaflet
pal = colorBin(c('#fee0d2','#fb6a4a', '#cb181d', '#a50f15', '#67000d'), bins = c(0,10,100,1000,10000,100000))
popup1 = paste0('<strong>Neighborhood: </strong><br>', subdat_data$NTAName,
'<br><strong>Count of pick-ups: </strong><br>', subdat_data$count)
mymap = leaflet(subdat) %>%
setView(lat=40.7128, lng=-74.0059, zoom=10) %>%
addProviderTiles('CartoDB.Positron') %>%
addPolygons(fillColor = ~pal(count), color = 'grey', weight = 1, popup = popup1, fillOpacity = .6) %>%
addLegend(position = 'bottomright', ## choose bottomleft, bottomright, topleft or topright
colors = c('#fee0d2','#fb6a4a', '#cb181d', '#a50f15', '#67000d'),
labels = c(0,"","","",100000),  ## legend labels (only min and max)
opacity = 0.6,      ##transparency again
title = "relative<br>amount")
print(mymap)
library(rgeos)
library(sp)
library(rgdal)
library(leaflet)
library(htmlwidgets)
library(shiny)
setwd("~/Desktop/Spr2017-proj2-grp2")
#data.sel = read.csv("data/2016_abridged_cleaned_grouped_FpD.csv", header = T)
#save(data, file = 'output/2016_green_taxi.RData')
# load('output/2016_green_taxi.RData')
# myShape1 = readOGR("data/nynta_shapefile/nynta.shp", layer="nynta")
# save(myShape1, file = 'output/myShape1.RData'
load('output/myShape1.RData')
# calculate the count of pick-ups in each block
subdat<-spTransform(myShape1, CRS("+init=epsg:4326"))
load('output/count_seperated.RData')
#subdat@data$count = count_result[, input$hour+1, !input$isBussinessDay+1]
# all hours
subdat@data$count = apply(count_result[, , 1], 1, sum)
subdat_data=subdat@data[,c("NTACode", "NTAName", "count")]
subdat<-SpatialPolygonsDataFrame(subdat, data=subdat_data)
# print leaflet
pal = colorBin(c('#fee0d2','#fb6a4a', '#cb181d', '#a50f15', '#67000d'), bins = c(0,10,100,1000,10000,100000))
popup1 = paste0('<strong>Neighborhood: </strong><br>', subdat_data$NTAName,
'<br><strong>Count of pick-ups: </strong><br>', subdat_data$count)
mymap = leaflet(subdat) %>%
setView(lat=40.7128, lng=-74.0059, zoom=10) %>%
addProviderTiles('CartoDB.Positron') %>%
addPolygons(fillColor = ~pal(count), color = 'grey', weight = 1, popup = popup1, fillOpacity = .6) %>%
addLegend(position = 'bottomright', ## choose bottomleft, bottomright, topleft or topright
colors = c('#fee0d2','#fb6a4a', '#cb181d', '#a50f15', '#67000d'),
labels = c(0,10,100,1000,10000),  ## legend labels (only min and max)
opacity = 0.6,      ##transparency again
title = "relative<br>amount")
print(mymap)
mymap = leaflet(subdat) %>%
setView(lat=40.7128, lng=-74.0059, zoom=10) %>%
addProviderTiles('CartoDB.Positron') %>%
addPolygons(fillColor = ~pal(count), color = 'grey', weight = 1, popup = popup1, fillOpacity = .6) %>%
addLegend(position = 'bottomright', ## choose bottomleft, bottomright, topleft or topright
colors = c('#fee0d2','#fb6a4a', '#cb181d', '#a50f15', '#67000d'),
labels = c(0,10,100,1000,10000),  ## legend labels (only min and max)
opacity = 0.6,      ##transparency again
title = "Pick Up<br>Numbers")
library(rgeos)
library(sp)
library(rgdal)
library(leaflet)
library(htmlwidgets)
library(shiny)
setwd("~/Desktop/Spr2017-proj2-grp2")
#data.sel = read.csv("data/2016_abridged_cleaned_grouped_FpD.csv", header = T)
#save(data, file = 'output/2016_green_taxi.RData')
# load('output/2016_green_taxi.RData')
# myShape1 = readOGR("data/nynta_shapefile/nynta.shp", layer="nynta")
# save(myShape1, file = 'output/myShape1.RData'
load('output/myShape1.RData')
# calculate the count of pick-ups in each block
subdat<-spTransform(myShape1, CRS("+init=epsg:4326"))
load('output/count_seperated.RData')
#subdat@data$count = count_result[, input$hour+1, !input$isBussinessDay+1]
# all hours
subdat@data$count = apply(count_result[, , 1], 1, sum)
subdat_data=subdat@data[,c("NTACode", "NTAName", "count")]
subdat<-SpatialPolygonsDataFrame(subdat, data=subdat_data)
# print leaflet
pal = colorBin(c('#fee0d2','#fb6a4a', '#cb181d', '#a50f15', '#67000d'), bins = c(0,10,100,1000,10000,100000))
popup1 = paste0('<strong>Neighborhood: </strong><br>', subdat_data$NTAName,
'<br><strong>Count of pick-ups: </strong><br>', subdat_data$count)
mymap = leaflet(subdat) %>%
setView(lat=40.7128, lng=-74.0059, zoom=10) %>%
addProviderTiles('CartoDB.Positron') %>%
addPolygons(fillColor = ~pal(count), color = 'grey', weight = 1, popup = popup1, fillOpacity = .6) %>%
addLegend(position = 'bottomright', ## choose bottomleft, bottomright, topleft or topright
colors = c('#fee0d2','#fb6a4a', '#cb181d', '#a50f15', '#67000d'),
labels = c(0,10,100,1000,10000),  ## legend labels (only min and max)
opacity = 0.6,      ##transparency again
title = "Pick Up<br>Numbers")
print(mymap)
runApp('doc')
runApp('doc')
runApp('doc')
