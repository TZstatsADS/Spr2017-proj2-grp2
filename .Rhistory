myShape1[1,]
myShape1[1,]
myShape1[5,]
myShape1[6,]
head(data)
dat = data.frame(Longitude = c(-73.92864, -73.92428), Latitude = c(40.68061, 40.69804))
coordinates(dat) <- ~ Longitude + Latitude
dat
proj4string(dat) <- proj4string(myShape1)
over(dat, myShape1)
over(myShape1, dat)
plot(myShape1)
proj4string(dat) <- CRS("+proj=longlat")
dat <- spTransform(dat, proj4string(sodo))
dat <- spTransform(dat, proj4string(myShape1))
over(dat, myShape1)
over(myShape1, dat)
dat@coords
install.packages('leaflet')
data = read.csv("2016_Green_Taxi_Trip_Data.csv", header = T)
save(data, '2016_green_taxi.RData')
save(data, file = '2016_green_taxi.RData')
rm(data)
load('2016_green_taxi.RData')
setwd('/Users/AaronWang/Desktop/Spr2017-proj2-grp2')
load('output/2016_green_taxi.RData')
myShape1 = readOGR("data/nynta_shapefile/nynta.shp", layer="nynta_shapefile")
library(rgeos)
library(sp)
library(rgdal)
library(leaflet)
library(htmlwidgets)
library(shiny)
library(dplyr)
load('output/2016_green_taxi.RData')
myShape1 = readOGR("data/nynta_shapefile/nynta.shp", layer="nynta_shapefile")
myShape1 = readOGR("data/nynta_shapefile/nynta.shp", layer="data/nynta_shapefile")
myShape1 = readOGR("data/nynta_shapefile/nynta.shp", layer="data/nynta_shapefile")
myShape1 = readOGR("data/nynta_shapefile/nynta.shp", layer="data/nynta_shapefile")
myShape1 = readOGR("data/nynta/nynta.shp", layer="data/nynta")
myShape1 = readOGR("data/nynta/nynta.shp", layer="data/nynta1")
myShape1 = readOGR("data/nynta1/nynta.shp", layer="data/nynta")
myShape1 = readOGR("data/nynta_shapefile/nynta.shp", layer="data/nynta")
myShape1 = readOGR("data/nynta_shapefile/nynta.shp", layer="data/nynta_shapefile/")
myShape1 = readOGR("data/nynta_shapefile/nynta.shp", layer="nynta_shapefile")
myShape1 = readOGR("data/nynta_shapefile/nynta.shp", layer="nynta_shapefile")
myShape1 = readOGR("data/nynta_shapefile/nynta.shp", layer="nynta")
dim(myShape1)
myShape1@data
save(data, file = 'output/myShape1.RData')
rm(myShape1)
load('output/myShape1.RData')
data.sel = data[1:200000,]
subdat<-spTransform(myShape1, CRS("+init=epsg:4326"))
dat = data.frame(Longitude = data.sel$Pickup_longitude, Latitude = data.sel$Pickup_latitude)
load('output/myShape1.RData')
myShape1 = readOGR("data/nynta_shapefile/nynta.shp", layer="nynta")
save(myShape1, file = 'output/myShape1.RData')
rm(myShape1)
load('output/myShape1.RData')
subdat<-spTransform(myShape1, CRS("+init=epsg:4326"))
dat = data.frame(Longitude = data.sel$Pickup_longitude, Latitude = data.sel$Pickup_latitude)
coordinates(dat) <- ~ Longitude + Latitude
proj4string(dat) <- CRS("+proj=longlat")
dat <- spTransform(dat, proj4string(myShape1))
r = over(dat, myShape1)
subdat@data$count = table(r$NTACode)[rank(subdat@data$NTACode)]
subdat_data=subdat@data[,c("NTACode", "NTAName", "count")]
subdat<-SpatialPolygonsDataFrame(subdat, data=subdat_data)
pal = colorBin(c('#fee0d2','#fb6a4a', '#cb181d', '#a50f15', '#67000d'), bins = c(0,10,100,1000,10000,100000))
popup1 = paste0('<strong>Neighborhood: </strong><br>', subdat_data$NTAName,
'<br><strong>Count of pick-ups: </strong><br>', subdat_data$count)
mymap = leaflet(subdat) %>%
setView(lat=40.7128, lng=-74.0059, zoom=10) %>%
addProviderTiles('CartoDB.Positron') %>%
addPolygons(fillColor = ~pal(count), color = 'grey', weight = 1, popup = popup1, fillOpacity = .6)
print(mymap)
head(data)
?addPolygons
1 && 0
1 && 3
a = array(4,3,2)
a = array(dim = c(4,3,2))
a
a[,1,1] = c(1,2,3,4)
a
head(subdat@data)
table(r$NTACode)[rank(subdat@data$NTACode)]
rank(subdat@data$NTACode)
table(r$NTACode)[rank(subdat@data$NTACode)]
table(r$NTACode)
dim(r)
head(r)
count = table(r$NTACode)[count_rank]
count_rank = rank(subdat@data$NTACode)
count = table(r$NTACode)[count_rank]
count
unlist(count)
unname(count)
as.vector(count)
as.vector(count)
count = table(r$NTACode)[count_rank]
as.vector(count)
head(r)
head(r, 100)
head(r, 15)
head(data)
head(data, 10)
r = r %>% subset(select = 'NTACode') %>%
cbind(data %>% subset(select = c('Trip_distance', 'Total_amount')))
r = r %>% subset(select = c('NTACode')) %>%
cbind(data %>% subset(select = c('Trip_distance', 'Total_amount')))
r %>% subset(select = c('NTACode'))
dim(r %>% subset(select = c('NTACode')))
dim(data %>% subset(select = c('Trip_distance', 'Total_amount'))
)
r = r %>% subset(select = c('NTACode')) %>%
cbind(data.sel %>% subset(select = c('Trip_distance', 'Total_amount')))
dim(r)
head(r)
data_copy = data
data = read('data/2016_abridged_cleaned_grouped_FpD_weekOftheDay.csv')
setwd('/Users/AaronWang/Desktop/5243-proj2-grp2')
data = read('data/2016_abridged_cleaned_grouped_FpD_weekOftheDay.csv')
data = read.csv('data/2016_abridged_cleaned_grouped_FpD_weekOftheDay.csv')
dim(data)
head(data)
dim(subdat_data)
?ifelse
head(data)
WWH = ifelse(data$holiday, 3, data$weekend + 1)
WWH
table(WWH)
head(data)
range(head(data$pickup_date))
table(data$pickup_date))
table(data$pickup_date)
table(data$holiday)
head(data)
r$Trip_distance / r%Total_amount
r$Trip_distance / r$Total_amount
length(r$Trip_distance / r$Total_amount)
r$FDRatio = r$Total_amount /r$Trip_distance
r
tapply(r$FDRatio, r$NTACode, mean)
range(r$FDRatio)
FDRatio = tapply(r$FDRatio, r$NTACode, mean, is.na = T)
FDRatio
FDRatio = tapply(r$FDRatio, r$NTACode, mean, is.na = F)
FDRatio
?mean
FDRatio = tapply(r$FDRatio, r$NTACode, mean, na.rm = F)
FDRatio
length(r$FDRatio)
data$WWH = ifelse(data$weekend, 2, 1)
count_result = array(dim(195,24,3))
count_result = array(dim = c(195,24,3))
load('output/myShape1.RData')
subdat<-spTransform(myShape1, CRS("+init=epsg:4326"))
count_rank = rank(subdat@data$NTACode)
count_result = array(dim = c(195,24,2))
for (j in 1:2){
for (h in 1:24){
data.sel = data %>% subset(hour == h && WWH == j)
dat = data.frame(Longitude = data.sel$Pickup_longitude, Latitude = data.sel$Pickup_latitude)
coordinates(dat) <- ~ Longitude + Latitude
proj4string(dat) <- CRS("+proj=longlat")
dat <- spTransform(dat, proj4string(myShape1))
r = over(dat, myShape1)
r = r %>% subset(select = c('NTACode')) %>%
cbind(data %>% subset(select = c('Trip_distance', 'Total_amount')))
# r$FDRatio = r$Total_amount /r$Trip_distance
count = table(r$NTACode)[count_rank]
# FDRatio = tapply(r$FDRatio, r$NTACode, mean, na.rm = F)
count_result[,h,j] = as.vector(count)
}
}
head(data)
for (j in 1:2){
for (h in 1:24){
data.sel = data %>% subset(pickup_hour == h && WWH == j)
dat = data.frame(Longitude = data.sel$Pickup_longitude, Latitude = data.sel$Pickup_latitude)
coordinates(dat) <- ~ Longitude + Latitude
proj4string(dat) <- CRS("+proj=longlat")
dat <- spTransform(dat, proj4string(myShape1))
r = over(dat, myShape1)
r = r %>% subset(select = c('NTACode')) %>%
cbind(data %>% subset(select = c('Trip_distance', 'Total_amount')))
# r$FDRatio = r$Total_amount /r$Trip_distance
count = table(r$NTACode)[count_rank]
# FDRatio = tapply(r$FDRatio, r$NTACode, mean, na.rm = F)
count_result[,h,j] = as.vector(count)
}
}
j = 1
range(data$pickup_hour)
data.sel = data %>% subset(pickup_hour == h - 1 && WWH == j)
dat = data.frame(Longitude = data.sel$Pickup_longitude, Latitude = data.sel$Pickup_latitude)
coordinates(dat) <- ~ Longitude + Latitude
proj4string(dat) <- CRS("+proj=longlat")
dat <- spTransform(dat, proj4string(myShape1))
r = over(dat, myShape1)
r = r %>% subset(select = c('NTACode')) %>%
cbind(data %>% subset(select = c('Trip_distance', 'Total_amount')))
count = table(r$NTACode)[count_rank]
count_result[,h,j] = as.vector(count)
count_result[,1,1]
data = data %>% subset(c('pickup_hour', 'Pickup_longitude',
'Pickup_latitude'))
data = data %>% subset(select = c('pickup_hour', 'Pickup_longitude',
'Pickup_latitude'))
data$WWH = ifelse(data$weekend, 2, 1)
head()
head()
head(data)
data = read.csv('data/2016_abridged_cleaned_grouped_FpD_weekOftheDay.csv')
data$WWH = ifelse(data$weekend, 2, 1)
head(data)
data$WWH = ifelse(!data$business_day, 3, data$weekend + 1)
head(data)
table(data$WWH)
table(data$weekend)
table(data$weekend + 1)
data$WWH = ifelse(data$weekend, 2, 1 + 2 * !data$business_day)
table(data$WWH)
sum(data$Weekend == data$business_day)
data$WWH = ifelse(data$business_day, 1, 2)
table(data$WWH)
count_result = array(dim = c(195,24,2))
load('output/myShape1.RData')
subdat<-spTransform(myShape1, CRS("+init=epsg:4326"))
count_rank = rank(subdat@data$NTACode)
for (j in 1:2){
for (h in 1:24){
data.sel = data %>% subset(pickup_hour == h - 1 && WWH == j)
dat = data.frame(Longitude = data.sel$Pickup_longitude, Latitude = data.sel$Pickup_latitude)
coordinates(dat) <- ~ Longitude + Latitude
proj4string(dat) <- CRS("+proj=longlat")
dat <- spTransform(dat, proj4string(myShape1))
r = over(dat, myShape1)
r = r %>% subset(select = c('NTACode')) %>%
cbind(data %>% subset(select = c('Trip_distance', 'Total_amount')))
# r$FDRatio = r$Total_amount /r$Trip_distance
count = table(r$NTACode)[count_rank]
# FDRatio = tapply(r$FDRatio, r$NTACode, mean, na.rm = F)
count_result[,h,j] = as.vector(count)
}
}
j = 1
h = 1
data.sel = data %>% subset(pickup_hour == h - 1 && WWH == j)
dat = data.frame(Longitude = data.sel$Pickup_longitude, Latitude = data.sel$Pickup_latitude)
coordinates(dat) <- ~ Longitude + Latitude
proj4string(dat) <- CRS("+proj=longlat")
dat <- spTransform(dat, proj4string(myShape1))
r = over(dat, myShape1)
r = r %>% subset(select = c('NTACode')) %>%
cbind(data %>% subset(select = c('Trip_distance', 'Total_amount')))
count = table(r$NTACode)[count_rank]
count_result[,h,j] = as.vector(count)
h = 24
data.sel = data %>% subset(pickup_hour == h - 1 && WWH == j)
dat = data.frame(Longitude = data.sel$Pickup_longitude, Latitude = data.sel$Pickup_latitude)
coordinates(dat) <- ~ Longitude + Latitude
dim(data.sel)
dim(data %>% subset(pickup_hour == 0 && WWH == 1))
dim(data %>% subset(pickup_hour == 1 && WWH == 1))
dim(data %>% subset(pickup_hour == 2 && WWH == 1))
range(data$pickup_hour)
table(data$pickup_hour)
1 & 2
1 | 2
1 | 0
data$pickup_hour
typeof(data$pickup_hour)
dim(data %>% subset(pickup_hour == 1 & WWH == 1))
dim(data %>% subset(pickup_hour == 2 & WWH == 1))
dim(data %>% subset(pickup_hour == 2 && WWH == 1))
for (j in 1:2){
for (h in 1:24){
data.sel = data %>% subset(pickup_hour == h - 1 & WWH == j)
dat = data.frame(Longitude = data.sel$Pickup_longitude, Latitude = data.sel$Pickup_latitude)
coordinates(dat) <- ~ Longitude + Latitude
proj4string(dat) <- CRS("+proj=longlat")
dat <- spTransform(dat, proj4string(myShape1))
r = over(dat, myShape1)
r = r %>% subset(select = c('NTACode')) %>%
cbind(data %>% subset(select = c('Trip_distance', 'Total_amount')))
# r$FDRatio = r$Total_amount /r$Trip_distance
count = table(r$NTACode)[count_rank]
# FDRatio = tapply(r$FDRatio, r$NTACode, mean, na.rm = F)
count_result[,h,j] = as.vector(count)
}
}
for (j in 1:2){
for (h in 1:24){
data.sel = data %>% subset(pickup_hour == h - 1 & WWH == j)
dat = data.frame(Longitude = data.sel$Pickup_longitude, Latitude = data.sel$Pickup_latitude)
coordinates(dat) <- ~ Longitude + Latitude
proj4string(dat) <- CRS("+proj=longlat")
dat <- spTransform(dat, proj4string(myShape1))
r = over(dat, myShape1)
r = r %>% subset(select = c('NTACode')) %>%
cbind(data.sel %>% subset(select = c('Trip_distance', 'Total_amount')))
# r$FDRatio = r$Total_amount /r$Trip_distance
count = table(r$NTACode)[count_rank]
# FDRatio = tapply(r$FDRatio, r$NTACode, mean, na.rm = F)
count_result[,h,j] = as.vector(count)
}
}
dim(count_result)
count_result
save(count_result, file = 'output/count_seperated.RData')
count_result[,1,]
dim(count_result[,1,])
!0 + 2
dat = data.frame(Longitude = data.sel$Pickup_longitude, Latitude = data.sel$Pickup_latitude)
dim(dat)
dat
coordinates(dat) <- ~ Longitude + Latitude
proj4string(dat) <- CRS("+proj=longlat")
dat <- spTransform(dat, proj4string(myShape1))
r = over(dat, myShape1)
r
dim(r)
head(r)
length(table(r$NTACode))
table(r$NTACode)
range(FDRatio)
dim(FDRatio)
FDRatio
head(r)
r = r %>% subset(select = c('NTACode')) %>%
cbind(data.sel %>% subset(select = c('Trip_distance', 'Total_amount')))
head(r)
dim(r)
r$Trip_distance
range(r$Trip_distance)
range(r$Total_amount)
range(r$Total_amount / r$Trip_distance)
head(data)
head(data.sel)
data = read.csv('data/2016_abridged_cleaned_grouped_FpD_weekOftheDay.csv')
data = data %>% subset(select = c('Pickup_longitude', 'Pickup_latitude',
'business_day', 'farePerDistance'))
data$WWH = ifelse(data$business_day, 1, 2)
count_result = array(dim = c(195,24,2))
FDRatio_result = array(dim(195,24,3))
load('output/myShape1.RData')
subdat<-spTransform(myShape1, CRS("+init=epsg:4326"))
count_rank = rank(subdat@data$NTACode)
FDRatio_result = array(dim = c(195,24,3))
load('output/myShape1.RData')
subdat<-spTransform(myShape1, CRS("+init=epsg:4326"))
count_rank = rank(subdat@data$NTACode)
tapply(r$FPD, r$NTACode, mean, na.rm = F)
r$FPD
r
j = 1
h = 1
data.sel = data %>% subset(pickup_hour == h - 1 & WWH == j)
data = read.csv('data/2016_abridged_cleaned_grouped_FpD_weekOftheDay.csv')
head(data)
data = data %>% subset(select = c('pickup_hour', 'business_day',
'Pickup_longitude', 'Pickup_latitude', 'farePerDistance'))
data$WWH = ifelse(data$business_day, 1, 2)
count_result = array(dim = c(195,24,2))
FPD_result = array(dim = c(195,24,3))
load('output/myShape1.RData')
subdat<-spTransform(myShape1, CRS("+init=epsg:4326"))
count_rank = rank(subdat@data$NTACode)
data.sel = data %>% subset(pickup_hour == h - 1 & WWH == j)
dat = data.frame(Longitude = data.sel$Pickup_longitude, Latitude = data.sel$Pickup_latitude)
coordinates(dat) <- ~ Longitude + Latitude
proj4string(dat) <- CRS("+proj=longlat")
dat <- spTransform(dat, proj4string(myShape1))
r = over(dat, myShape1)
r = r %>% subset(select = c('NTACode')) %>% cbind(data.sel)
FPD = tapply(r$farePerDistance, r$NTACode, mean, na.rm = F)[count_rank]
tapply(r$farePerDistance, r$NTACode, mean, na.rm = F)[count_rank]
r
r$farePerDistance
sum(is.na(r$farePerDistance))
length(r$farePerDistance)
length(r$NTACode)
tapply(r$farePerDistance, r$NTACode, mean, na.rm = F)
tapply(r$farePerDistance, r$NTACode, mean)
# count_result[,h,j] = as.vector(count)
data = read.csv('data/2016_abridged_cleaned_grouped_FpD_weekOftheDay.csv')
# data$WWH = ifelse(data$weekend, 2, 1 + 2 * !data$business_day)
data = data %>% subset(select = c('pickup_hour', 'business_day',
'Pickup_longitude', 'Pickup_latitude', 'farePerDistance'))
data$WWH = ifelse(data$business_day, 1, 2)
count_result = array(dim = c(195,24,2))
FPD_result = array(dim = c(195,24,3))
load('output/myShape1.RData')
subdat<-spTransform(myShape1, CRS("+init=epsg:4326"))
count_rank = rank(subdat@data$NTACode)
for (j in 1:2){
for (h in 1:24){
data.sel = data %>% subset(pickup_hour == h - 1 & WWH == j)
dat = data.frame(Longitude = data.sel$Pickup_longitude, Latitude = data.sel$Pickup_latitude)
coordinates(dat) <- ~ Longitude + Latitude
proj4string(dat) <- CRS("+proj=longlat")
dat <- spTransform(dat, proj4string(myShape1))
r = over(dat, myShape1)
r = r %>% subset(select = c('NTACode')) %>% cbind(data.sel)
# count = table(r$NTACode)[count_rank]
FPD = tapply(r$farePerDistance, r$NTACode, mean)[count_rank]
# count_result[,h,j] = as.vector(count)
FPD_result[,h,j] = as.vector(count)
}
}
# save(count_result, file = 'output/count_seperated.RData')
save(count_result, file = 'output/FPD_seperated.RData')
data = read.csv('data/2016_abridged_cleaned_grouped_FpD_weekOftheDay.csv')
# data$WWH = ifelse(data$weekend, 2, 1 + 2 * !data$business_day)
data = data %>% subset(select = c('pickup_hour', 'business_day',
'Pickup_longitude', 'Pickup_latitude', 'farePerDistance'))
data$WWH = ifelse(data$business_day, 1, 2)
count_result = array(dim = c(195,24,2))
FPD_result = array(dim = c(195,24,3))
load('output/myShape1.RData')
subdat<-spTransform(myShape1, CRS("+init=epsg:4326"))
count_rank = rank(subdat@data$NTACode)
for (j in 1:2){
for (h in 1:24){
data.sel = data %>% subset(pickup_hour == h - 1 & WWH == j)
dat = data.frame(Longitude = data.sel$Pickup_longitude, Latitude = data.sel$Pickup_latitude)
coordinates(dat) <- ~ Longitude + Latitude
proj4string(dat) <- CRS("+proj=longlat")
dat <- spTransform(dat, proj4string(myShape1))
r = over(dat, myShape1)
r = r %>% subset(select = c('NTACode')) %>% cbind(data.sel)
# count = table(r$NTACode)[count_rank]
FPD = tapply(r$farePerDistance, r$NTACode, mean)[count_rank]
# count_result[,h,j] = as.vector(count)
FPD_result[,h,j] = as.vector(count)
}
}
# save(count_result, file = 'output/count_seperated.RData')
save(FPD_result, file = 'output/FPD_seperated.RData')
which("All day" == c("All day", "Business Day", "Not Business Day"))
which("Business Day" == c("All day", "Business Day", "Not Business Day"))
a = ifelse(1, 1, 2)
a =
';';
/'/'
a = array(c(1:24), dim = c(4,3,2))
a
apply(a, 3, dum)
apply(a, 3, sum)
apply(a, c(1,2), sum)
count_intermediate = ifelse(input$days == "All Day", count_result %>% apply(c(1,2), sum),
count_result[ , , input$days == "Not Business Day" + 1])
subdat@data$count = ifelse(!input$showhr, count_intermediate %>% apply(1, sum),
count_intermediate[, input$hr_adjust+1] )
input = list(days = "All Day", showhr = "TRUE")
dim(count_result)
count_intermediate = ifelse(input$days == "All Day", count_result %>% apply(c(1,2), sum),
count_result[ , , input$days == "Not Business Day" + 1])
subdat@data$count = ifelse(!input$showhr, count_intermediate %>% apply(1, sum),
count_intermediate[, input$hr_adjust+1] )
!input$showhr
input$showhr
input = list(days = "All Day", showhr = TRUE)
count_intermediate = ifelse(input$days == "All Day", count_result %>% apply(c(1,2), sum),
count_result[ , , input$days == "Not Business Day" + 1])
subdat@data$count = ifelse(!input$showhr, count_intermediate %>% apply(1, sum),
count_intermediate[, input$hr_adjust+1] )
input = list(days = "All Day", showhr = TRUE, hr_adjust = 3)
count_intermediate = ifelse(input$days == "All Day", count_result %>% apply(c(1,2), sum),
count_result[ , , input$days == "Not Business Day" + 1])
subdat@data$count = ifelse(!input$showhr, count_intermediate %>% apply(1, sum),
count_intermediate[, input$hr_adjust+1] )
dim(count_intermediate)
count_result %>% apply(c(1,2), sum)
load('output/count_seperated.RData')
count_result %>% apply(c(1,2), sum)
count_intermediate = ifelse(input$days == "All Day", count_result %>% apply(c(1,2), sum),
count_result[ , , input$days == "Not Business Day" + 1])
subdat@data$count = ifelse(!input$showhr, count_intermediate %>% apply(1, sum),
count_intermediate[, input$hr_adjust+1] )
count_intermediate
if (input$days == "All day"){
count_intermediate = count_result %>% apply(c(1,2), sum)
}else{
count_intermediate = count_result[ , , input$days == "Not Business Day" + 1]
}
if (input$days == "All day"){
count_intermediate = count_result %>% apply(c(1,2), sum)
}else{
count_intermediate = count_result[ , , (input$days=="Not Business Day") + 1]
}
count_intermediate
ifelse(!input$showhr, count_intermediate %>% apply(1, sum),
count_intermediate[, input$hr_adjust+1] )
if (input$days == "All day"){
count_intermediate = count_result %>% apply(c(1,2), sum)
}else{
count_intermediate = count_result[ , , (input$days=="Not Business Day") + 1]
}
if (!input$showhr){
subdat@data$count = count_intermediate %>% apply(1, sum)
}else{
subdat@data$count = count_intermediate[, input$hr_adjust+1]
}
subdat@data$count
library(leaflet)
#Choices for drop-downs
shiny::runApp('app')
shiny::runApp('app')
